# frontend/pages/login.py
import streamlit as st
from backend.session import SessionManager, SessionError

def show_login():
    st.header("üîê Login ‚Äî Definedge (Backend)")

    if "client" in st.session_state and st.session_state.client:
        st.success(f"Already logged in (uid={getattr(st.session_state.client,'uid', None)})")
        if st.button("Logout"):
            st.session_state.pop("client", None)
            st.success("Logged out")
        return

    st.write("Login uses values from `.streamlit/secrets.toml` (DEFINEDGE_API_TOKEN, DEFINEDGE_API_SECRET, optional DEFINEDGE_TOTP_SECRET).")

    api_token = st.secrets.get("DEFINEDGE_API_TOKEN")
    api_secret = st.secrets.get("DEFINEDGE_API_SECRET")
    totp = st.secrets.get("DEFINEDGE_TOTP_SECRET")

    if not api_token or not api_secret:
        st.error("Missing secrets. Add DEFINEDGE_API_TOKEN and DEFINEDGE_API_SECRET to .streamlit/secrets.toml")
        return

    col1, col2 = st.columns(2)

    with col1:
        st.subheader("Login (TOTP automatic)")
        if st.button("Login with TOTP"):
            try:
                sm = SessionManager(api_token=api_token, api_secret=api_secret, totp_secret=totp)
                client = sm.create_session()
                st.session_state.client = client
                st.success("Login successful (TOTP).")
            except SessionError as e:
                st.error(f"Login failed: {e}")
            except Exception as e:
                st.error(f"Unexpected error: {e}")

    with col2:
        st.subheader("Login (manual OTP)")
        if st.button("Request OTP (auth_step1)"):
            try:
                # lightweight client to request OTP
                from backend.api_client import APIClient
                ac = APIClient(api_token=api_token, api_secret=api_secret)
                step1 = ac.auth_step1()
                st.write("Step1 response (server):")
                st.write(step1)
                st.success("OTP requested (check SMS).")
            except Exception as e:
                st.error(f"Request OTP failed: {e}")

        otp = st.text_input("Paste OTP received", key="sms_otp")
        if st.button("Submit OTP"):
            try:
                sm = SessionManager(api_token=api_token, api_secret=api_secret, totp_secret=None)
                client = sm.create_session(otp_code=otp)
                st.session_state.client = client
                st.success("Login successful (OTP).")
            except SessionError as e:
                st.error(f"Login failed: {e}")
            except Exception as e:
                st.error(f"Unexpected error: {e}")
